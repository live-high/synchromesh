 SELECT count(*) FROM singer
 SELECT count(*) FROM singer
 SELECT name ,  country ,  age FROM singer ORDER BY age DESC
 SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC
 SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
 SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
 SELECT Song_Name ,  Song_release_year FROM singer ORDER BY Age ASC LIMIT 1
 SELECT Song_Name ,  Song_release_year FROM singer ORDER BY Age ASC LIMIT 1
 SELECT DISTINCT country FROM singer WHERE age  >  20
 SELECT DISTINCT Country FROM singer WHERE Age  >  20
 SELECT Country ,  COUNT(*) FROM singer GROUP BY Country
 SELECT Country ,  COUNT(*) FROM singer GROUP BY Country
 SELECT Song_Name FROM singer WHERE Age  >  (SELECT avg(Age) FROM singer)
 SELECT Song_Name FROM singer WHERE Age  >  (SELECT avg(Age) FROM singer)
 SELECT location ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
 SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
 SELECT max(capacity) ,  avg(capacity) FROM stadium
 SELECT avg(capacity) ,  max(capacity) FROM stadium
 SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
 SELECT name ,  capacity FROM stadium ORDER BY average attendance DESC LIMIT 1
 SELECT COUNT(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
 SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
 SELECT T2.Name ,  COUNT(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
 SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
 SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.name ,  T1.capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T2.year  >  2013 GROUP BY T1.stadium_id ORDER BY count(*) DESC LIMIT 1
 SELECT concert_ID ,  YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
 SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
 SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
 SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
 SELECT Country FROM singer WHERE Age  >  40 INTERSECT SELECT Country FROM singer WHERE Age  <  30
 SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE YEAR  =  2014)
 SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE YEAR  =  2014)
 SELECT T1.concert_name ,  T2.theme ,  count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T1.concert_id
 SELECT T3.Name ,  T2.Theme ,  COUNT(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID  =  T3.Singer_ID GROUP BY T1.concert_ID
 SELECT T2.Name ,  COUNT(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T2.Name
 SELECT T2.Name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Name
 SELECT T2.Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID WHERE T1.year  =  2014
 SELECT T2.Name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID  =  T3.concert_ID WHERE T3.Year  =  2014
 SELECT name ,  country FROM singer WHERE song_name LIKE "%Hey%"
 SELECT T1.name , T1.country FROM singer AS T1 JOIN song AS T2 ON T1.song_id  =  T2.song_id WHERE T2.song_name LIKE '%Hey%'
 SELECT T2.name ,  T2.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T2.year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T2.year  =  2015
 SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2015
 SELECT count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T1.Capacity  =  ( SELECT MAX ( Capacity ) FROM stadium )
 SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.capacity DESC LIMIT 1
 SELECT count(*) FROM Pets WHERE weight  >  10
 SELECT count(*) FROM PETS WHERE weight  >  10
 SELECT min(weight) FROM PETS WHERE pet_age  =  (SELECT min(pet_age) FROM PETS)
 SELECT min(weight) FROM PETS WHERE pet_age  =  (SELECT min(pet_age) FROM PETS)
 SELECT max(weight) ,  pet_type FROM Pets GROUP BY pet_type
 SELECT max(weight) ,  pet_type FROM Pets GROUP BY pet_type
 SELECT count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID  =  T2.PetID JOIN Student AS T3 ON T1.StuID  =  T3.StuID WHERE T3.age  >  20
 SELECT count(*) FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid JOIN student AS T3 ON T1.stuid  =  T3.stuid WHERE T3.age  >  20
 SELECT count(DISTINCT StuID) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID  =  T2.PetID JOIN Student AS T3 ON T3.StuID  =  T1.StuID WHERE T3.sex  =  'F' AND T3.major  =  'Comp.Sci.'
 SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID WHERE T1.sex  =  'F' AND T2.pet_type  =  'Dog'
 SELECT count(DISTINCT pet_type) FROM pets
 SELECT count(DISTINCT pet_type) FROM Pets
 SELECT T2.fname FROM has_pet AS T1 JOIN student AS T2 ON T1.stuid  =  T2.stuid WHERE T1.pettype  =  'Cat' OR T1.pettype  =  'Dog'
 SELECT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T3.PetType  =  'Cat' OR T3.PetType  =  'Dog'
 SELECT T2.fname FROM has_pet AS T1 JOIN student AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T1.petid  =  T3.petid WHERE T3.pet_type  =  'cat' INTERSECT SELECT T2.fname FROM has_pet AS T1 JOIN student AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T1.petid  =  T3.petid WHERE T3.pet_type  =  'dog'
 SELECT T2.fname FROM has_pet AS T1 JOIN student AS T2 ON T1.stuid  =  T2.stuid WHERE T1.pettype  =  'Cat' INTERSECT SELECT T2.fname FROM has_pet AS T1 JOIN student AS T2 ON T1.stuid  =  T2.stuid WHERE T1.pettype  =  'Dog'
 SELECT major ,  age FROM student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE pet_type  =  'Cat')
 SELECT major ,  age FROM student WHERE StuID NOT IN (SELECT StuID FROM has_pet WHERE pet_type  =  'cat')
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet WHERE pet_type  =  'Cat'
 SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet WHERE PetType  =  'Cat'
 SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetID  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetID  =  'cat'
 SELECT fname FROM student WHERE StuID IN (SELECT StuID FROM has_pet WHERE pet_type  =  'dog' EXCEPT SELECT StuID FROM has_pet WHERE pet_type  =  'cat')
 SELECT PetType ,  weight FROM Pets ORDER BY pet_age ASC LIMIT 1
 SELECT pet_type ,  weight FROM Pets ORDER BY pet_age LIMIT 1
 SELECT PetID ,  weight FROM Pets WHERE pet_age  >  1
 SELECT petID ,  weight FROM Pets WHERE pet_age  >  1
 SELECT avg(pet_age) ,  max(pet_age) ,  PetType FROM Pets GROUP BY PetType
 SELECT avg(pet_age) ,  max(pet_age) ,  pet_type FROM PETS GROUP BY pet_type
 SELECT avg(weight) ,  pet_type FROM Pets GROUP BY pet_type
 SELECT avg(weight) ,  pet_type FROM PETS GROUP BY pet_type
 SELECT t1.fname ,  t1.age FROM student AS t1 JOIN has_pet AS t2 ON t1.stuid  =  t2.stuid
 SELECT DISTINCT T1.Fname ,  T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID
 SELECT StuID FROM Student WHERE LName  =  'Smith'
 SELECT PetID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.LName  =  'Smith'
 SELECT count(*) ,  StuID FROM Has_Pet GROUP BY StuID
 SELECT count(*) ,  T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID
 SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1
 SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1. StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1
 SELECT T1.LName FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.StuID JOIN pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.pet_age  =  3
 SELECT T2.LName FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T1.PetID  =  T3.PetID WHERE T3.pet_age  =  3
 SELECT avg(age) FROM student WHERE StuID NOT IN (SELECT StuID FROM has_pet)
 SELECT avg(age) FROM student WHERE StuID NOT IN (SELECT StuID FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE pet_type  =  'animal')
 SELECT count(*) FROM continents
 SELECT count(*) FROM continents
 SELECT T1.ContId ,  T2.Continent ,  COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId
 SELECT continent ,  count(*) ,  name FROM countries GROUP BY continent
 SELECT count(*) FROM countries
 SELECT count(*) FROM countries
 SELECT T1.FullName ,  T1.Id ,  count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id
 SELECT T2.FullName ,  T1.Maker ,  count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Maker
 SELECT model FROM cars_data ORDER BY horsepower LIMIT 1
 SELECT Model FROM cars_data ORDER BY Horsepower LIMIT 1
 SELECT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId  =  T2.ModelId WHERE T1.Weight  <  (SELECT avg(Weight) FROM cars_data)
 SELECT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId  =  T2.ModelId WHERE T1.Weight  <  (SELECT avg(Weight) FROM cars_data)
 SELECT T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker WHERE T2.Model  =  "Car" AND YEAR  =  1970
 SELECT DISTINCT T2.FullName FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Year  =  1970
 SELECT T2.Make ,  T2.ProductionTime FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Make  =  T2.Id ORDER BY T1.Year ASC LIMIT 1
 SELECT T1.Maker ,  T1.Year FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.Maker ORDER BY T2.Year ASC LIMIT 1
 SELECT DISTINCT T2.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId  =  T2.Id WHERE T2.year  >  1980
 SELECT DISTINCT model FROM model_list WHERE YEAR  >  1980
 SELECT T2.Continent ,  COUNT(*) FROM car_makers AS T1 JOIN continents AS T2 ON T1.Continent  =  T2.ContId GROUP BY T2.Continent
 SELECT T2.Continent ,  count(*) FROM car_makers AS T1 JOIN continents AS T2 ON T1.Country  =  T2.Continent GROUP BY T2.Continent
 SELECT CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country
 SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId GROUP BY T2.CountryName ORDER BY count(*) DESC LIMIT 1
 SELECT count(*) ,  T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.FullName
 SELECT count(*) ,  T1.id ,  T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker GROUP BY T1.id
 SELECT Accelerate FROM cars_data WHERE Maker  =  "amc" AND Model  =  "hornet sportabout (sw)"
 SELECT Accelerate FROM cars_data WHERE Model  =  "amc hornet sportabout (sw)"
 SELECT count(*) FROM car_makers WHERE country  =  'France'
 SELECT count(*) FROM car_makers WHERE Country  =  "France"
 SELECT count(*) FROM model_list
 SELECT count(*) FROM car_makers WHERE country  =  "United States"
 SELECT avg(mpg) FROM cars_data WHERE Cylinders  =  4
 SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  "4"
 SELECT min(weight) FROM cars_data WHERE Cylinders  =  8 AND YEAR  =  1974
 SELECT min(Weight) FROM cars_data WHERE Cylinders  =  8 AND YEAR  =  1974
 SELECT Maker ,  Model FROM model_list
 SELECT Maker ,  Model FROM model_list
 SELECT CountryName ,  CountryId FROM car_makers GROUP BY CountryId HAVING COUNT(*)  >=  1
 SELECT T1.CountryName ,  T1.CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country
 SELECT count(*) FROM cars_data WHERE horsepower  >  150
 SELECT count(*) FROM cars_data WHERE Horsepower  >  150
 SELECT avg(Weight) ,  YEAR FROM cars_data GROUP BY YEAR
 SELECT avg(weight) ,  avg(year) FROM cars_data GROUP BY avg(weight) ,  avg(year)
 SELECT CountryName FROM car_makers WHERE CountryId IN (SELECT CountryId FROM car_makers GROUP BY CountryId HAVING COUNT(*)  >=  3)
 SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T2.continent  =  "Europe" GROUP BY T1.Country HAVING COUNT(*)  >=  3
 SELECT max(Horsepower) ,  make FROM cars_data WHERE Cylinders  =  3
 SELECT max(horsepower) ,  Maker FROM cars_data WHERE Cylinders  =  3 GROUP BY Maker
 SELECT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.ModelId GROUP BY T2.Model ORDER BY max(T1.MPG) DESC LIMIT 1
 SELECT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.ModelId  =  T2.ModelId ORDER BY T1.MPG DESC LIMIT 1
 SELECT avg(horsepower) FROM cars_data WHERE YEAR  <  1980
 SELECT avg(Horsepower) FROM cars_data WHERE YEAR  <  1980
 SELECT avg(Edispl) FROM cars_data WHERE Model  =  "volvo"
 SELECT avg(Edispl) FROM cars_data WHERE Maker  =  "Volvo"
 SELECT max(Accelerate) ,  Cylinders FROM cars_data GROUP BY Cylinders
 SELECT max(Accelerate) ,  Cylinders FROM cars_data GROUP BY Cylinders
 SELECT T2.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId  =  T2.MakeId GROUP BY T1.ModelId ORDER BY count(*) DESC LIMIT 1
 SELECT T2.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId  =  T2.MakeId GROUP BY T1.ModelId ORDER BY count(*) DESC LIMIT 1
 SELECT count(*) FROM cars_data WHERE Cylinders  >  4
 SELECT count(*) FROM cars_data WHERE Cylinders  >  4
 SELECT count(*) FROM cars_data WHERE YEAR  =  1980
 SELECT count(*) FROM cars_data WHERE YEAR  =  1980
 SELECT count(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.maker  =  T2.id WHERE T2.fullname  =  "American Motor Company"
 SELECT count(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id WHERE T2.FullName  =  "American Motor Company"
 SELECT fullname ,  id FROM car_makers GROUP BY id HAVING count(*)  >  3
 SELECT T2.FullName ,  T1.Id FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id GROUP BY T1.Maker HAVING COUNT(*)  >  3
 SELECT DISTINCT T2.model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker WHERE T1.fullname  =  "General Motors" OR T2.weight  >  3500
 SELECT DISTINCT T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker WHERE T1.Maker  =  "General Motors" OR T2.Weight  >  3500
 SELECT YEAR FROM cars_data WHERE weight BETWEEN 3000 AND 4000
 SELECT DISTINCT YEAR FROM cars_data WHERE weight  <  4000 INTERSECT SELECT DISTINCT YEAR FROM cars_data WHERE weight  >  3000
 SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
 SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
 SELECT Cylinders FROM cars_data WHERE Accelerate  =  (SELECT min(Accelerate) FROM cars_data WHERE Maker  =  "volvo")
 SELECT Cylinders FROM cars_data WHERE Accelerate  =  (SELECT min(Accelerate) FROM cars_data WHERE Model  =  "volvo")
 SELECT count(*) FROM cars_data WHERE accelerate  >  (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
 SELECT count(*) FROM cars_data WHERE Accelerate  >  (SELECT Accelerate FROM cars_data ORDER BY Horsepower DESC LIMIT 1)
 SELECT COUNT(DISTINCT countryid) FROM car_makers GROUP BY countryid HAVING count(*)  >  2
 SELECT COUNT ( DISTINCT countryid ) FROM car_makers GROUP BY countryid HAVING count(*)  >  2
 SELECT count(*) FROM cars_data WHERE Cylinders  >  6
 SELECT count(*) FROM cars_data WHERE cylinders  >  6
 SELECT model FROM cars_data WHERE cylinders  =  4 ORDER BY horsepower DESC LIMIT 1
 SELECT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Model  =  T2.ModelId WHERE T1.Cylinders  =  4 ORDER BY T1.Horsepower DESC LIMIT 1
 SELECT T2.makeid ,  T2.make FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.makerid  =  T2.id WHERE T1.horsepower  >  (SELECT min(horsepower) FROM cars_data) EXCEPT SELECT T2.makeid ,  T2.make FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.makerid  =  T2.id WHERE T1.cylinders  >  3
 SELECT T2.MakeId ,  T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.MakeId  =  T2.MakeId WHERE T1.Cylinders  <  4
 SELECT max(MPG) FROM cars_data WHERE Cylinders  >=  8 OR YEAR   <  1980
 SELECT max(MPG) FROM cars_data WHERE Cylinders  =  "8" OR YEAR  <  1980
 SELECT T2.model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.modelid  =  T2.id WHERE T2.Weight  <  3500 AND T1.Maker != 'Ford Motor Company'
 SELECT DISTINCT model FROM model_list WHERE modelid IN (SELECT lighter_than_3500 FROM cars_data WHERE maker != 'Ford Motor Company')
 SELECT countryName FROM countries WHERE countryId NOT IN (SELECT countryId FROM car_makers)
 SELECT countryName FROM countries WHERE countryId NOT IN (SELECT countryId FROM car_makers)
 SELECT id ,  Maker FROM car_makers GROUP BY id HAVING count(*)  >=  2 INTERSECT SELECT id ,  Maker FROM car_makers GROUP BY id HAVING count(*)  >  3
 SELECT T1.id ,  T1.maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker GROUP BY T1.id HAVING count(*)  >=  2 INTERSECT SELECT T1.id ,  T1.maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id  =  T2.maker GROUP BY T1.id HAVING count(*)  >  3
 SELECT T2.CountryId ,  T1.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId GROUP BY T2.CountryId HAVING COUNT(*)  >  3 UNION SELECT T2.CountryId ,  T1.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T1.Maker  =  'fiat'
 SELECT T1.CountryId ,  T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.CountryId HAVING COUNT(*)  >  3 UNION SELECT T1.CountryId ,  T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  "fiat"
 SELECT Country FROM airlines WHERE Airline  =  "JetBlue Airways"
 SELECT Country FROM airlines WHERE Abbreviation  =  "Jetblue Airways"
 SELECT Abbreviation FROM airlines WHERE Airline  =  "JetBlue Airways"
 SELECT Abbreviation FROM airlines WHERE Airline  =  "Jetblue Airways"
 SELECT airline ,  abbreviation FROM airlines WHERE country  =  'USA'
 SELECT Airline ,  Abbreviation FROM airlines WHERE Country  =  'USA'
 SELECT AirportCode ,  AirportName FROM airports WHERE City  =  "Anthony"
 SELECT AirportCode ,  AirportName FROM airports WHERE City  =  "Anthony"
 SELECT count(*) FROM airlines
 SELECT count(*) FROM airlines
 SELECT count(*) FROM airports
 SELECT count(*) FROM airports
 SELECT count(*) FROM flights
 SELECT count(*) FROM flights
 SELECT Airline FROM airlines WHERE Abbreviation  =  "UAL"
 SELECT Airline FROM airlines WHERE Abbreviation  =  'UAL'
 SELECT count(*) FROM airlines WHERE country  =  'USA'
 SELECT count(*) FROM airlines WHERE country  =  'USA'
 SELECT city ,  country FROM airports WHERE airportname  =  'Alton'
 SELECT city ,  country FROM airports WHERE AirportName  =  "Alton"
 SELECT AirportName FROM airports WHERE AirportCode  =  'AKO'
 SELECT AirportName FROM airports WHERE AirportCode  =  'AKO'
 SELECT AirportName FROM airports WHERE City  =  'Aberdeen'
 SELECT AirportName FROM airports WHERE City  =  "Aberdeen"
 SELECT count(*) FROM flights WHERE SourceAirport  =  'APG'
 SELECT count(*) FROM flights WHERE sourceairport  =  'APG'
 SELECT count(*) FROM flights WHERE DestAirport  =  "ATO"
 SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.AirportName  =  "ATO"
 SELECT count(*) FROM flights WHERE SourceAirport  =  "Aberdeen"
 SELECT count(*) FROM flights WHERE SourceAirport  =  "Aberdeen"
 SELECT count(*) FROM flights WHERE DestAirport  =  "Aberdeen"
 SELECT count(*) FROM flights WHERE DestAirport  =  "Aberdeen"
 SELECT count(*) FROM flights WHERE destination  =  'Ashley' AND source  =  'Aberdeen'
 SELECT count(*) FROM flights WHERE DestAirport  =  "Ashley" AND SourceAirport  =  "Aberdeen"
 SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  'JetBlue Airways'
 SELECT count(*) FROM flights WHERE airline  =  'Jetblue Airways'
 SELECT count(*) FROM flights WHERE airline  =  'United Airlines' AND destination  =  'ASY'
 SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportName  =  "ASY" AND T1.Airline  =  "United Airlines"
 SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T1.Airline  =  'United Airlines' AND T2.AirportName  =  'AHD'
 SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.AirportName  =  "AHD Airport" AND T1.Airline  =  "United Airlines"
 SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" AND T1.airline  =  "United Airlines"
 SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.destairport  =  T2.airportcode WHERE T2.city  =  "Aberdeen" AND T1.airline  =  "United Airlines"
 SELECT T1.city FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode GROUP BY T1.DestAirport ORDER BY count(*) DESC LIMIT 1
 SELECT T2.city FROM flights AS T1 JOIN airports AS T2 ON T1.destAirport  =  T2.AirportCode GROUP BY T1.destAirport ORDER BY count(*) DESC LIMIT 1
 SELECT T1.city FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode  =  T2.destairport GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1
 SELECT T1.city FROM airports AS T1 JOIN flights AS T2 ON T1.airportcode  =  T2.sourceairport GROUP BY T2.sourceairport ORDER BY count(*) DESC LIMIT 1
 SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
 SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
 SELECT T1.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
 SELECT AirportCode FROM flights GROUP BY AirportCode ORDER BY count(*) LIMIT 1
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.uid ORDER BY count(*) DESC LIMIT 1
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.UID  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
 SELECT T1.Abbreviation ,  T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Airline ORDER BY count(*) LIMIT 1
 SELECT T2.Abbreviation ,  T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T2.Abbreviation ORDER BY count(*) LIMIT 1
 SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID WHERE T1.SourceAirport  =  'AHD'
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.UID  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T3.AirportName  =  "AHD"
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  'AHD'
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.DestAirport  =  T3.AirportCode WHERE T3.AirportName  =  "AHD"
 SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T3.AirportName  =  'APG' INTERSECT SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID JOIN airports AS T3 ON T1.DestAirport  =  T3.AirportCode WHERE T3.AirportName  =  'CVO'
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'APG' INTERSECT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'CVO'
 SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID WHERE T1.SourceAirport  =  'CVO' EXCEPT SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID WHERE T1.DestAirport  =  'APG'
 SELECT airline FROM airlines WHERE departure FROM cvo EXCEPT departure FROM apg
 SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID GROUP BY T1.Airline HAVING count(*)  >=  10
 SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >=  10
 SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID GROUP BY T1.Airline HAVING count(*)  <  200
 SELECT T2.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.UID GROUP BY T2.Airline HAVING count(*)  <  200
 SELECT FlightNo FROM Flights WHERE Airline  =  "United Airlines"
 SELECT FlightNo FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"
 SELECT FlightNo FROM flights WHERE SourceAirport  =  "APG"
 SELECT FlightNo FROM Flights WHERE DestAirport  =  "APG"
 SELECT FlightNo FROM Flights WHERE DestAirport  =  "APG"
 SELECT FlightNo FROM flights WHERE DestAirport  =  "APG"
 SELECT FlightNo FROM Flights WHERE DestAirport  =  "Aberdeen"
 SELECT FlightNo FROM flights WHERE SourceAirport  =  "Aberdeen"
 SELECT FlightNo FROM flights WHERE DestAirport  =  "Aberdeen"
 SELECT FlightNo FROM Flights WHERE DestAirport  =  "Aberdeen"
 SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport WHERE T1.City  =  "Aberdeen" OR T1.City  =  "Abilene"
 SELECT count(*) FROM airports AS T1 JOIN flights AS T2 ON T1.city  =  T2.destairport WHERE T1.airportname  =  "Aberdeen" OR T1.airportname  =  "Abilene"
 SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights)
 SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) OR AirportCode NOT IN (SELECT DestAirport FROM flights)
 SELECT count(*) FROM employee
 SELECT count(*) FROM employee
 SELECT name FROM employee ORDER BY age
 SELECT name FROM employee ORDER BY Age ASC
 SELECT count(*) ,  city FROM employee GROUP BY city
 SELECT count(*) ,  city FROM employee GROUP BY city
 SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
 SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
 SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
 SELECT LOCATION ,  COUNT(*) FROM shop GROUP BY LOCATION
 SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
 SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
 SELECT min(Number_products) ,  max(Number_products) FROM shop
 SELECT min(Number_products) ,  max(Number_products) FROM shop
 SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
 SELECT name ,  LOCATION ,  district FROM shop ORDER BY Number_products DESC
 SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
 SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
 SELECT T1.name FROM employee AS T1 JOIN evaluation AS T2 ON T1.employee_id  =  T2.employee_Id GROUP BY T2.employee_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY count(*) DESC LIMIT 1
 SELECT T1.name FROM employee AS T1 JOIN evaluation AS T2 ON T1.employee_id  =  T2.employee_id ORDER BY T2.bonus DESC LIMIT 1
 SELECT T1.name FROM employee AS T1 JOIN evaluation AS T2 ON T1.employee_id  =  T2.employee_id ORDER BY T2.bonus DESC LIMIT 1
 SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation WHERE year_awarded  =  'Y')
 SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)
 SELECT T1.name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY count(*) DESC LIMIT 1
 SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1
 SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
 SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
 SELECT count(*) ,  T1.name FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id  =  T2.shop_id GROUP BY T1.name
 SELECT T1.name ,  count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id  =  T2.shop_id GROUP BY T2.shop_id
 SELECT sum(bonus) FROM evaluation
 SELECT sum(Bonus) FROM evaluation
 SELECT * FROM hiring
 SELECT * FROM hiring
 SELECT district FROM shop WHERE number_products  <  3000 INTERSECT SELECT district FROM shop WHERE number_products  >  10000
 SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000
 SELECT count(DISTINCT LOCATION) FROM shop
 SELECT count(DISTINCT LOCATION) FROM shop
 SELECT count(*) FROM Documents
 SELECT count(*) FROM Documents
 SELECT document_id ,  document_name ,  document_description FROM Documents
 SELECT document_id ,  document_name ,  document_description FROM documents
 SELECT document_name ,  template_id FROM Documents WHERE document_description LIKE '%w%'
 SELECT document_name ,  template_id FROM Documents WHERE document_description LIKE '%w%'
 SELECT document_id ,  template_id ,  document_description FROM Documents WHERE Document_Name  =  "Robbin CV"
 SELECT document_id ,  template_id ,  document_description FROM Documents WHERE document_name  =  "Robbin CV"
 SELECT count(DISTINCT T1.Template_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID
 SELECT count(DISTINCT template_id) FROM Documents
 SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  "PPT"
 SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id WHERE T2.template_type_code  =  "PPT"
 SELECT T1.template_id ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id
 SELECT Template_ID ,  COUNT(*) FROM Documents GROUP BY Template_ID
 SELECT T1.template_id ,  T2.template_type_code FROM Templates AS T1 JOIN Ref_template_Types AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T3.template_id  =  T1.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
 SELECT t1.template_id ,  t2.template_type_code FROM Documents AS t1 JOIN Templates AS t2 ON t1.template_id  =  t2.template_id GROUP BY t1.template_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.template_id FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id HAVING count(*)  >  1
 SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
 SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents
 SELECT template_id FROM templates EXCEPT SELECT template_id FROM documents
 SELECT count(*) FROM Templates
 SELECT count(*) FROM Templates
 SELECT Template_ID ,  Version_Number ,  Template_Type_Code FROM Templates
 SELECT template_id ,  version_number ,  template_type_code FROM Templates
 SELECT DISTINCT template_type_code FROM Templates
 SELECT DISTINCT template_type_code FROM Ref_Template_Types
 SELECT template_id FROM TEMPLATES WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
 SELECT template_id FROM templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
 SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
 SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
 SELECT version_number ,  template_type_code FROM templates WHERE version_number  >  5
 SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
 SELECT Template_Type_Code ,  count(*) FROM Templates GROUP BY Template_Type_Code
 SELECT template_type_code ,  count(*) FROM templates GROUP BY template_type_code
 SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
 SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
 SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*)  <  3
 SELECT template_type_code FROM templates GROUP BY template_type_code HAVING count(*)  <  3
 SELECT version_number ,  template_type_code FROM Templates ORDER BY version_number ASC LIMIT 1
 SELECT version_number ,  template_type_code FROM Templates ORDER BY version_number ASC LIMIT 1
 SELECT T1.template_type_code FROM Ref_Template_Types AS T1 JOIN Documents AS T2 ON T1.template_type_code  =  T2.template_type_code WHERE T2.document_name  =  "Data base"
 SELECT T2.template_type_code FROM documents AS T1 JOIN templates AS T2 ON T1.template_id  =  T2.template_id WHERE T1.document_name  =  "Data base"
 SELECT document_name FROM documents AS T1 JOIN templates AS T2 ON T1.template_id  =  T2.template_id WHERE T2.template_type_code  =  "BK"
 SELECT document_name FROM documents AS T1 JOIN templates AS T2 ON T1.template_id  =  T2.template_id WHERE T2.template_type_code  =  "BK"
 SELECT T1.template_type_code ,  count(*) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.template_id  =  T3.template_id GROUP BY T1.template_type_code
 SELECT T1.template_type_code ,  count(*) FROM Ref_template_types AS T1 JOIN Documents AS T2 ON T1.template_type_code  =  T2.template_type_code GROUP BY T1.template_type_code
 SELECT T1.template_type_code FROM Ref_template_types AS T1 JOIN Documents AS T2 ON T1.template_type_code  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
 SELECT Template_Type_Code FROM Documents GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
 SELECT template_type_code FROM Ref_template_types EXCEPT SELECT t1.template_type_code FROM Ref_template_types AS t1 JOIN Documents AS t2 ON t1.template_type_code  =  t2.template_type_code
 SELECT template_type_code FROM Ref_template_types EXCEPT SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
 SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types
 SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types
 SELECT template_type_description FROM Ref_Template_Types WHERE template_type_code  =  "AD"
 SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  =  "AD"
 SELECT template_type_code FROM Ref_Template_Types WHERE template_type_description  =  "Book"
 SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description  =  "Book"
 SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN documents AS T3 ON T2.template_id  =  T3.template_id
 SELECT T1.Template_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID
 SELECT T1.template_id FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.template_type_code  =  T2.template_type_code WHERE T2.template_type_description  =  "Presentation"
 SELECT T1.template_id FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.template_type_code  =  T2.template_type_code WHERE T2.template_type_description  =  "Presentation"
 SELECT count(*) FROM Paragraphs
 SELECT count(*) FROM Paragraphs
 SELECT count(*) FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name  =  "Summer Show"
 SELECT count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T1.Document_Name  =  "Summer Show"
 SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text  =  "Korea "
 SELECT Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE "%Korea%"
 SELECT T2.paragraph_id ,  T2.paragraph_text FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name  =  "Welcome to NY"
 SELECT document_id ,  paragraph_text FROM paragraphs AS T1 JOIN documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Welcome to NY"
 SELECT T2.paragraph_text FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name  =  "Customer reviews"
 SELECT T2.paragraph_text FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name  =  "Customer reviews"
 SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY count(*)
 SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY count(*)
 SELECT document_id ,  document_name ,  count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
 SELECT T1.document_id ,  T1.document_name ,  count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
 SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
 SELECT document_id FROM paragraphs GROUP BY document_id HAVING count(*)  >=  2
 SELECT document_id ,  document_name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY document_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.document_id ,  T1.document_name FROM documents AS T1 JOIN paragraphs AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
 SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
 SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY count(*) DESC LIMIT 1
 SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
 SELECT document_id FROM paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
 SELECT document_id FROM paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM paragraphs WHERE paragraph_text  =  'Ireland'
 SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T2.paragraph_text  =  'Brazil' INTERSECT SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id  =  T2.document_id WHERE T2.paragraph_text  =  'Ireland'
 SELECT count(*) FROM teacher
 SELECT count(*) FROM teacher
 SELECT Name FROM Teacher ORDER BY Age ASC
 SELECT Name FROM Teacher ORDER BY Age ASC
 SELECT Age ,  Hometown FROM TEACHER
 SELECT Age ,  Hometown FROM TEACHER
 SELECT Name FROM Teacher WHERE Hometown != "Little Lever Urban District"
 SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
 SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
 SELECT Name FROM Teacher WHERE Age  =  32 OR Age  =  33
 SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
 SELECT Hometown FROM teacher ORDER BY Age LIMIT 1
 SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
 SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
 SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Hometown FROM TEACHER GROUP BY Hometown HAVING COUNT(*)  >=  2
 SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
 SELECT T2.Name ,  T1.Course_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
 SELECT T1.Name ,  T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
 SELECT T1.Name ,  T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name
 SELECT T1.Name ,  T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T1.Name
 SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T1.Course_ID  =  'Math'
 SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Course_ID IN (SELECT Course_ID FROM course WHERE Course  =  "Math")
 SELECT T2.Name ,  count(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
 SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
 SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
 SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
 SELECT Name FROM Teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
 SELECT Name FROM Teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)
 SELECT count(*) FROM visitor WHERE age  <  30
 SELECT name FROM visitor WHERE level_of_membership  >  4 ORDER BY level_of_membership
 SELECT avg(Age) FROM visitor WHERE LEVEL_OF_MEMBERSHIP  <  4
 SELECT name ,  LEVEL_of_membership FROM visitor WHERE LEVEL_of_membership  >  4 ORDER BY age
 SELECT museum_id ,  name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
 SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
 SELECT open_year ,  num_of_staff FROM museum WHERE name  =  "Plaza Museum"
 SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
 SELECT T1.id ,  T1.name ,  T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id  =  T2.visitor_id GROUP BY T1.id HAVING COUNT(*)  >  1
 SELECT T2.id ,  T2.name ,  T2.level_of_membership FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_id  =  T2.id GROUP BY T1.visitor_id ORDER BY sum(T1.total_spent) DESC LIMIT 1
 SELECT T1.Museum_ID ,  T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID  =  T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1
 SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
 SELECT T1.name ,  T1.age FROM visitor AS T1 JOIN visit AS T2 ON T1.id = T2.visitor_id GROUP BY T2.visitor_id ORDER BY count(*) DESC LIMIT 1
 SELECT avg(Num_of_Ticket) ,  max(Num_of_Ticket) FROM visit
 SELECT sum(t2.total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.level_of_membership  =  1
 SELECT T3.name FROM visit AS T1 JOIN museum AS T2 ON T1.museumb_id  =  T2.museumb_id JOIN visitor AS T3 ON T1.visitor_id  =  T3.id WHERE T2.open_year  <  2009 OR T2.open_year  >  2011
 SELECT count(*) FROM visitor WHERE id NOT IN (SELECT visitor_ID FROM visit AS T1 JOIN museum AS T2 ON T1.museumbid  =  T2.museumbid WHERE T2.open_year  >  2010)
 SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
 SELECT count(*) FROM players
 SELECT count(*) FROM players
 SELECT count(*) FROM matches
 SELECT count(*) FROM MATCHES
 SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
 SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
 SELECT avg(loser_age) ,  avg(winner_age) FROM MATCHES
 SELECT avg(loser_age) ,  avg(winner_age) FROM MATCHES
 SELECT avg(winner_rank) FROM matches
 SELECT avg(winner_rank) FROM MATCHES
 SELECT max(loser_rank) FROM matches
 SELECT loser_rank FROM losers GROUP BY loser_rank ORDER BY count(*) DESC LIMIT 1
 SELECT count(DISTINCT country_code) FROM players
 SELECT count(DISTINCT country_code) FROM players
 SELECT count(DISTINCT loser_name) FROM matches
 SELECT count(DISTINCT loser_name) FROM matches
 SELECT tourney_name FROM MATCHES GROUP BY tourney_name HAVING COUNT(*)  >  10
 SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
 SELECT DISTINCT T2.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T1.year  =  2013 INTERSECT SELECT DISTINCT T2.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T1.year  =  2016
 SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.year  =  2013 INTERSECT SELECT T1.first_name ,  T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.year  =  2016
 SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
 SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
 SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  "WTA Championships" INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  "Australian Open"
 SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  "WTA Championships" INTERSECT SELECT T1.first_name ,  T1.country_code FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  "Australian Open"
 SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
 SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
 SELECT first_name ,  last_name FROM players ORDER BY birth_date
 SELECT first_name ,  last_name FROM players ORDER BY birth_date
 SELECT first_name ,  last_name FROM players WHERE hand  =  'left' ORDER BY birth_date
 SELECT first_name ,  last_name FROM players WHERE hand  =  'left' ORDER BY birth_date
 SELECT T2.first_name ,  T2.country_code FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
 SELECT T2.first_name ,  T2.country_code FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
 SELECT YEAR FROM MATCHES GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
 SELECT YEAR FROM MATCHES GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
 SELECT T1.winner_name ,  T2.ranking_points FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id WHERE T1.winner_rank  =  (SELECT winner_rank FROM rankings GROUP BY winner_rank ORDER BY count(*) DESC LIMIT 1)
 SELECT T1.winner_name ,  T1.winner_rank_points FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
 SELECT T2.winner_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id WHERE T1.tours  =  'Australian Open' ORDER BY T1.winner_rank_points DESC LIMIT 1
 SELECT T2.winner_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id WHERE T1.tours  =  "Australian Open" ORDER BY T1.winner_rank_points DESC LIMIT 1
 SELECT loser_name ,  winner_name FROM matches ORDER BY minutes DESC LIMIT 1
 SELECT loser_name ,  winner_name FROM MATCHES ORDER BY minutes DESC LIMIT 1
 SELECT avg(T1.ranking) ,  T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id
 SELECT T1.first_name ,  avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id
 SELECT T2.first_name ,  sum(T1.ranking_points) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id
 SELECT T2.first_name ,  sum(T1.ranking_points) FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.first_name
 SELECT count(*) ,  country_code FROM players GROUP BY country_code
 SELECT country_code ,  COUNT(*) FROM players GROUP BY country_code
 SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
 SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
 SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
 SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
 SELECT ranking_date ,  sum(tours) FROM rankings GROUP BY ranking_date
 SELECT ranking_date ,  sum(tours) FROM rankings GROUP BY ranking_date
 SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
 SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
 SELECT T2.winner_name ,  T2.winner_rank FROM matches AS T1 JOIN rankings AS T2 ON T1.winner_id  =  T2.player_id ORDER BY T1.winner_age LIMIT 3
 SELECT min(T2.winner_name) ,  T1.winner_rank FROM matches AS T1 JOIN rankings AS T2 ON T1.winner_id  =  T2.player_id GROUP BY T1.winner_name ORDER BY T1.winner_age DESC LIMIT 3
 SELECT count(DISTINCT T1.winner_name) FROM rankings AS T1 JOIN matches AS T2 ON T1.winner_id  =  T2.winner_id WHERE T2.tourney_name  =  "WTA Championships" AND T1.hand  =  "Left"
 SELECT count(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T1.hand  =  "left" AND T2.tourney_name  =  "WTA Championships"
 SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
 SELECT T2.first_name ,  T2.country_code ,  T2.birth_date FROM matches AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id ORDER BY T1.winner_rank_points DESC LIMIT 1
 SELECT count(*) ,  HAND FROM players GROUP BY HAND
 SELECT hand ,  COUNT(*) FROM players GROUP BY hand
 SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
 SELECT name ,  tonnage FROM ship ORDER BY name DESC
 SELECT name ,  date ,  result FROM battle
 SELECT max(note) ,  min(note) FROM death
 SELECT avg(injured) FROM death
 SELECT t2.note ,  t2.injured FROM ship AS t1 JOIN death AS t2 ON t1.id  =  t2.caused_by_ship_id WHERE t1.tonnage  =  't'
 SELECT name ,  result FROM battle WHERE bulgarian_commander != 'Boril'
 SELECT DISTINCT T1.id ,  T1.name FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle  =  T2.lost_in_battle WHERE T1.ship_type  =  'Brig'
 SELECT T1.id ,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING sum(T2.killed)  >  10
 SELECT T1.id ,  T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id ORDER BY sum(T2.injured) DESC LIMIT 1
 SELECT DISTINCT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
 SELECT count(DISTINCT RESULT) FROM battle
 SELECT count(*) FROM battle WHERE id NOT IN ( SELECT id FROM ship WHERE tonnage  =  225 )
 SELECT T1.name ,  T1.date FROM ship AS T1 JOIN battle AS T2 ON T1.id  =  T2.lost_in_battle WHERE T1.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM ship AS T1 JOIN battle AS T2 ON T1.id  =  T2.lost_in_battle WHERE T1.name  =  'HMS Atalanta'
 SELECT name ,  result ,  bulgarian_commander FROM battle WHERE id NOT IN (SELECT id FROM ship WHERE lost_in_battle  =  'English Channel')
 SELECT note FROM death WHERE note LIKE '%East%'
 SELECT address_1  ,  address_2 FROM addresses
 SELECT line_1 ,  line_2 FROM addresses
 SELECT count(*) FROM COURSES
 SELECT count(*) FROM COURSES
 SELECT course_description FROM COURSES WHERE course_name  =  'Math'
 SELECT course_description FROM COURSES WHERE course_name  =  'Math'
 SELECT zip_postcode FROM addresses WHERE city  =  'Port Chelsea'
 SELECT zip_postcode FROM addresses WHERE city  =  "Port Chelsea"
 SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.department_name ,  T2.department_id FROM DEGREE_PROGRAMS AS T3 JOIN DEPARTMENTS AS T1 JOIN DISTINCT T3.department_id  =  T1.department_id GROUP BY T3.department_id ORDER BY count(*) DESC LIMIT 1
 SELECT count(*) FROM DEGREE_PROGRAMS
 SELECT count(DISTINCT department_id) FROM Degree_Programs
 SELECT count(DISTINCT degree_summary_name) FROM degree_programs
 SELECT count(DISTINCT degree_program_id) FROM degree_programs
 SELECT count(*) FROM DEGREE_PROGRAMS AS T1 JOIN DEPARTMENTS AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Engineering'
 SELECT count(*) FROM DEPARTMENTS AS T1 JOIN degree_programs AS T2 ON T1.department_id  =  T2.department_id WHERE t1.department_name  =  "engineering"
 SELECT section_name ,  section_description FROM SECTIONS
 SELECT section_name ,  section_description FROM SECTIONS
 SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
 SELECT course_name ,  course_id FROM Sections GROUP BY course_id HAVING count(*)  <  2
 SELECT section_name FROM SECTIONS ORDER BY section_name DESC
 SELECT section_name FROM sections ORDER BY section_name DESC
 SELECT T1.semester_name ,  T2.semester_id FROM SEMESTERS AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T2.semester_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.semester_name ,  T1.semester_id FROM SEMESTERS AS T1 JOIN STUDENT_ENROLMENT AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
 SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
 SELECT department_description FROM departments WHERE department_name LIKE '%computer%'
 SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  =  2 INTERSECT SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  =  2
 SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM STUDENTS AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  =  2 AND T2.semester_id  =  'Fall'
 SELECT T2.first_name ,  T2.middle_name ,  T2.last_name FROM student_enrolment AS T1 JOIN students AS T2 ON T1.student_id  =  T2.student_id JOIN degree_programs AS T3 ON T1.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  "Bachelor"
 SELECT T2.first_name ,  T2.middle_name ,  T2.last_name FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T1.degree_program_id  =  'Bachelor's'
 SELECT T1.department_program_name FROM degree_programs AS T1 JOIN student_enrolment_courses AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.department_program_name ORDER BY count(*) DESC LIMIT 1
 SELECT T1.degree_summary_name FROM degree_programs AS T1 JOIN student_enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.degree_program_id ,  T2.degree_program_description FROM DEGREE_PROGRAMS AS T1 JOIN DESCRIPTIONS AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN STUDENT_ENROLMENT AS T3 ON T3.degree_program_id  =  T1.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.degree_program_id ,  T2.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id ,  count(*) FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
 SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
 SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
 SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
 SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
 SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
 SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
 SELECT last_name FROM students WHERE current_address_id IN ( SELECT address_id FROM addresses WHERE state_province_county  =  "North Carolina" EXCEPT SELECT T1.address_id FROM addresses AS T1 JOIN student_enrolment AS T2 ON T1.address_id  =  T2.enrolment_address WHERE T2.degree_program_id IN (SELECT T3.degree_program_id FROM student_enrolment AS T3 JOIN degree_programs AS T4 ON T3.degree_program_id  =  T4.degree_program_id WHERE T4.department_id IN (SELECT T5.department_id FROM student_enrolment AS T5 JOIN degree_programs AS T6 ON T5.degree_program_id  =  T6.degree_program_id WHERE T6.department_name  =  "Comp. Sci.") )
 SELECT last_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE state_province_county  =  'North Carolina') EXCEPT SELECT T1.last_name FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id  =  T2.student_id
 SELECT T1.transcript_date ,  T1.transcript_id FROM TRANSCRIPTS AS T1 JOIN TRANSCRIPT_CONTENTS AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
 SELECT T2.transcript_date ,  T2.transcript_id FROM Courses AS T1 JOIN Transcripts AS T2 ON T1.course_id  =  T2.student_course_id GROUP BY T2.transcript_id HAVING count(*)  >=  2
 SELECT cell_mobile_number FROM STUDENTS WHERE first_name  =  "Timmothy" AND last_name  =  "Ward"
 SELECT cell_mobile_number FROM STUDENTS WHERE first_name = "Timmothy" AND last_name = "Ward"
 SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered LIMIT 1
 SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered LIMIT 1
 SELECT first_name ,  middle_name ,  last_name FROM students ORDER BY date_left LIMIT 1
 SELECT first_name ,  middle_name ,  last_name FROM students WHERE date_first_registered  =  (SELECT min(date_first_registered) FROM students)
 SELECT first_name FROM STUDENTS WHERE permanent_address_id  !=  current_address_id
 SELECT T1.first_name FROM addresses AS T1 JOIN students AS T2 ON T1.address_id  =  T2.current_address_id WHERE T1.address_id  =  T2.permanent_address_id
 SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 ,  T1.line_3 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN STUDENTS AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
 SELECT avg(transcript_date) FROM TRANSCRIPTS
 SELECT avg(transcript_date) FROM TRANSCRIPTS
 SELECT transcript_date ,  other_details FROM TRANSCRIPTS ORDER BY transcript_date ASC LIMIT 1
 SELECT transcript_details FROM TRANSCRIPTS ORDER BY transcript_date ASC LIMIT 1
 SELECT count(*) FROM TRANSCRIPTS
 SELECT count(*) FROM TRANSCRIPTS
 SELECT transcript_date FROM TRANSCRIPTS ORDER BY transcript_date DESC LIMIT 1
 SELECT max(transcript_date) FROM TRANSCRIPTS
 SELECT T1.student_course_id ,  count(*) FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id  =  T2.student_enrolment_id GROUP BY T1.student_course_id
 SELECT count(*) ,  course_id FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.transcript_date ,  T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) LIMIT 1
 SELECT T1.transcript_date ,  T1.transcript_id FROM TRANSCRIPTS AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) LIMIT 1
 SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  "MA" INTERSECT SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  "BSc"
 SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'MA' INTERSECT SELECT semester_id FROM Student_Enrolment WHERE degree_program_id  =  'BS'
 SELECT count(DISTINCT current_address_id) FROM students
 SELECT DISTINCT T1.line_1 ,  T1.line_2 ,  T1.line_3 FROM addresses AS T1 JOIN students AS T2 ON T1.address_id  =  T2.current_address_id
 SELECT other_student_details FROM STUDENTS ORDER BY other_student_details DESC
 SELECT other_student_details FROM STUDENTS ORDER BY first_name ,  last_name DESC
 SELECT section_description FROM SECTIONS WHERE section_name  =  "h"
 SELECT section_description FROM SECTIONS WHERE section_name  =  'h'
 SELECT first_name FROM students WHERE country  =  'Haiti' OR cell_mobile_number  =  09700166582
 SELECT first_name FROM Students WHERE permanent_address_id  =  'Haiti' OR cell_mobile_number  =  '09700166582'
 SELECT title FROM cartoon ORDER BY title
 SELECT Title FROM Cartoon ORDER BY Title
 SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones"
 SELECT T1.Title FROM Cartoon AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Episode WHERE T1.Directed_by  =  "Ben Jones"
 SELECT count(*) FROM CARTON WHERE Written_by  =  "Joseph Kuhr"
 SELECT COUNT ( DISTINCT t1.title  ) FROM cartoon AS t1 JOIN written_by AS t2 ON t1.directed_by  =  t2.directed_by WHERE t2.written_by  =  "Joseph Kuhr"
 SELECT title ,  directed_by FROM cartoon ORDER BY original_air_date
 SELECT title ,  directed_by FROM cartoon ORDER BY original_air_date
 SELECT Title FROM CARTOON WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"
 SELECT directed_by FROM cartoon WHERE directed_by  =  "Ben Jones" OR directed_by  =  "Brandon Vietti"
 SELECT Country ,  COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Country ,  COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1
 SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel
 SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel
 SELECT Content FROM TV_Channel WHERE Series_name  =  "Sky Radio"
 SELECT Content FROM TV_Channel WHERE series_name  =  "Sky Radio"
 SELECT Package_Option FROM TV_Channel WHERE series_name  =  "Sky Radio"
 SELECT Package_Option FROM TV_Channel WHERE series_name  =  'Sky Radio'
 SELECT count(*) FROM TV_channel WHERE language  =  'english'
 SELECT count(*) FROM TV_Channel WHERE Language  =  "english"
 SELECT Language ,  COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1
 SELECT Language ,  COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1
 SELECT language ,  count(*) FROM TV_channel GROUP BY language
 SELECT count(*) ,  language FROM TV_channel GROUP BY language
 SELECT t2.series_name FROM tv_series AS t1 JOIN cartoon AS t2 ON t1.id  =  t2.channel WHERE t2.title  =  "The Rise of the Blue Beetle!"
 SELECT T2.series_name FROM cartoon AS T1 JOIN TV_channel AS T2 ON T1.channel  =  T2.id WHERE T1.title  =  "The Rise of the Blue Beetle"
 SELECT T1.Title FROM Cartoon AS T1 JOIN TV_channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  "Sky Radio"
 SELECT T1.title FROM cartoon AS T1 JOIN tv_channel AS T2 ON T1.channel  =  T2.id WHERE T2.series_name  =  "Sky Radio"
 SELECT Episode FROM TV_series ORDER BY Rating
 SELECT Episode FROM TV_series ORDER BY Rating
 SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
 SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
 SELECT min(Share) ,  max(Share) FROM TV_series
 SELECT max(Share) ,  min(Share) FROM TV_series
 SELECT Air_Date FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
 SELECT Air_Date FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
 SELECT Weekly_Rank FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
 SELECT Weekly_Rank FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
 SELECT t2.series_name FROM tv_series AS t1 JOIN tv_channel AS t2 ON t1.channel  =  t2.id WHERE t1.Episode  =  "A Love of a Lifetime"
 SELECT t1.series_name FROM TV_series AS t1 JOIN Episode AS t2 ON t1.id  =  t2.series_id WHERE t2.Episode  =  "A Love of a Lifetime"
 SELECT T1.Episode FROM TV_series AS T1 JOIN TV_channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  "Sky Radio"
 SELECT Episode FROM TV_series WHERE series_name  =  "Sky Radio"
 SELECT directed_by ,  COUNT(*) FROM Cartoon GROUP BY directed_by
 SELECT directed_by ,  COUNT(*) FROM cartoon GROUP BY directed_by
 SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
 SELECT Production_code ,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
 SELECT Package_Option ,  series_name FROM TV_Channel WHERE Hight_definition_TV  =  'Yes'
 SELECT Package_Option ,  series_name FROM TV_Channel WHERE Hight_definition_TV  =  'Y'
 SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.Series_name  =  T2.id WHERE T2.Written_by  =  "Todd Casey"
 SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel JOIN TODD CASKY AS T3 ON T2.Written_by  =  T3.Learn more at: http://www.cartoonbrew.com/newswire/cartoon-by-todd-casy.html
 SELECT country FROM TV_channel EXCEPT SELECT T1.country FROM TV_channel AS T1 JOIN Cartoon AS T2 ON T1.series_name  =  T2.id JOIN Written_by AS T3 ON T2.written_by  =  T3.id WHERE T3.first_name  =  "Todd" AND T3.last_name  =  "Casey"
 SELECT country FROM TV_Channel EXCEPT SELECT t1.country FROM TV_Channel AS t1 JOIN Cartoon AS t2 ON t1.id  =  t2.channel JOIN Written_by AS t3 ON t2.Written_by  =  t3.Todd_Casey
 SELECT t3.series_name ,  t3.country FROM cartoon AS t1 JOIN directed_by AS t2 ON t1.directed_by  =  t2.directed_by JOIN tv_channel AS t3 ON t3.id  =  t1.channel WHERE t2.director_name  =  "Ben Jones" INTERSECT SELECT t3.series_name ,  t3.country FROM cartoon AS t1 JOIN directed_by AS t2 ON t1.directed_by  =  t2.directed_by JOIN tv_channel AS t3 ON t3.id  =  t1.channel WHERE t2.director_name  =  "Michael Chang"
 SELECT T1.series_name ,  T1.country FROM TV_channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.channel JOIN tv_series AS T3 ON T1.id  =  T3.episode WHERE T2.directed_by  =  'Ben Jones' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.channel JOIN tv_series AS T3 ON T1.id  =  T3.episode WHERE T2.directed_by  =  'Michael Chang'
 SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language != "english"
 SELECT Pixel_aspect_ratio_PAR ,  Country FROM TV_Channel WHERE Language != "english"
 SELECT id FROM TV_Channel WHERE country HAVING count(*)  >  2
 SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*)  >  2
 SELECT id FROM TV_channel EXCEPT SELECT T1.id FROM TV_channel AS T1 JOIN Cartoon AS T2 ON T1.series_name  =  T2.title WHERE T2.directed_by  =  "Ben Jones"
 SELECT id FROM TV_Channel EXCEPT SELECT id FROM Cartoon WHERE Directed_by  =  "Ben Jones"
 SELECT package_option FROM TV_Channel EXCEPT SELECT t2.package_option FROM cartoon AS t1 JOIN TV_channel AS t2 ON t1.directed_by  =  t2.id WHERE t1.Title  =  "I Love Ben"
 SELECT package_option FROM TV_Channel EXCEPT SELECT t1.package_option FROM TV_Channel AS t1 JOIN Cartoon AS t2 ON t1.series_name  =  t2.series_name WHERE t2.Directed_by  =  "Ben Jones"
 SELECT count(*) FROM poker_player
 SELECT count(*) FROM poker_player
 SELECT Earnings FROM poker_player ORDER BY Earnings DESC
 SELECT Earnings FROM poker_player ORDER BY Earnings DESC
 SELECT Final_Table_Made ,  Best_Finish FROM poker_player
 SELECT Final_Table_Made ,  Best_Finish FROM poker_player
 SELECT avg(Earnings) FROM poker_player
 SELECT avg(Earnings) FROM poker_player
 SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
 SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
 SELECT max(T2.Final_Table_Made) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings  <  200000
 SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings  >  300000
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings  >  300000
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made
 SELECT T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings LIMIT 1
 SELECT T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings LIMIT 1
 SELECT T2.Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  =  (SELECT MAX (Height) FROM people)
 SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
 SELECT avg(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200
 SELECT avg(T2.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC
 SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Earnings DESC
 SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
 SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
 SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
 SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
 SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
 SELECT Name ,  Birth_Date FROM People ORDER BY Name
 SELECT Name FROM people WHERE Nationality != "Russia"
 SELECT Name FROM people WHERE Nationality != "Russia"
 SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
 SELECT Name FROM People EXCEPT SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
 SELECT count(DISTINCT Nationality) FROM people
 SELECT count(DISTINCT Nationality) FROM people
 SELECT count(DISTINCT state) FROM AREA_CODE_STATE
 SELECT contestant_number ,  contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC
 SELECT vote_id ,  phone_number ,  state FROM VOTES
 SELECT max(area_code) ,  min(area_code) FROM AREA_CODE_STATE
 SELECT created FROM votes WHERE state  =  'CA' ORDER BY created DESC LIMIT 1
 SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'
 SELECT DISTINCT state ,  created FROM VOTES
 SELECT T1.contestant_number ,  T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T2.contestant_number HAVING count(*)  >=  2
 SELECT T2.contestant_number ,  T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number  =  T2.contestant_number ORDER BY count(*) LIMIT 1
 SELECT COUNT(*) FROM VOTES WHERE state  =  'NY' OR state  =  'CA'
 SELECT count(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
 SELECT state ,  area_code FROM votes GROUP BY area_code ORDER BY count(*) DESC LIMIT 1
 SELECT t2.created ,  t2.state ,  t2.phone_number FROM CONTESTANTS AS t1 JOIN VOTES AS t2 ON t1.contestant_number  =  t2.contestant_number WHERE t1.contestant_name  =  'Tabatha Gehling'
 SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.state WHERE T2.contestant_number  =  'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.area_code  =  T2.state WHERE T2.contestant_number  =  'Kelly Clauss'
 SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'
 SELECT name FROM country WHERE indepyear  >  1950
 SELECT name FROM country WHERE IndepYear  >  1950
 SELECT COUNT(*) FROM country WHERE GovernmentForm  =  "Republic"
 SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
 SELECT sum(SurfaceArea) FROM country WHERE Region  =  'Caribbean'
 SELECT SUM ( SurfaceArea ) FROM country WHERE Continent  =  'Carribean'
 SELECT Continent FROM country WHERE Name  =  "Anguilla"
 SELECT Continent FROM country WHERE Name  =  "Anguilla"
 SELECT Region FROM country WHERE Capital  =  "Kabul"
 SELECT region FROM country WHERE name  =  "Afghanistan" AND capital  =  "Kabul"
 SELECT language FROM countrylanguage WHERE countrycode  =  "Aruba" ORDER BY percentage DESC LIMIT 1
 SELECT language FROM countrylanguage WHERE countrycode  =  "Aruba" GROUP BY language ORDER BY percentage DESC LIMIT 1
 SELECT population ,  lifeexpectancy FROM country WHERE name  =  'Brazil'
 SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
 SELECT region ,  population FROM country WHERE name  =  "Angola"
 SELECT Region ,  Population FROM country WHERE Name  =  "Angola"
 SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
 SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Central Africa"
 SELECT name FROM country WHERE continent  =  'Asia' ORDER BY lifeexpectancy LIMIT 1
 SELECT name FROM country WHERE continent  =  'Asia' ORDER BY lifeexpectancy LIMIT 1
 SELECT sum(population) ,  max(GNP) FROM country WHERE continent  =  'Asia'
 SELECT population ,  GNP FROM country WHERE continent  =  'Asia' ORDER BY GNP DESC LIMIT 1
 SELECT avg(lifeexpectancy) FROM country WHERE region  =  "Africa" AND governmentform  =  "Republic"
 SELECT avg(LifeExpectancy) FROM country WHERE GovernmentForm  =  'Republic' AND Continent  =  'Africa'
 SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" INTERSECT SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Europe"
 SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'
 SELECT Population FROM city WHERE District  =  "Gelderland"
 SELECT sum(population) FROM city WHERE district  =  "Gelderland"
 SELECT avg(GNP) ,  sum(population) FROM country WHERE governmentform  =  'US'
 SELECT avg(GNP) ,  population FROM country WHERE region  =  'US territory'
 SELECT count(DISTINCT language) FROM countrylanguage
 SELECT count(DISTINCT Language) FROM countrylanguage
 SELECT count(*) FROM country WHERE GovernmentForm  =  'Designated' AND Continent  =  'Africa'
 SELECT count(DISTINCT GovernmentForm) FROM country WHERE continent  =  "Africa"
 SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode  =  "Aruba"
 SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode  =  "Aruba"
 SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "Afghanistan"
 SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "Afghanistan"
 SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code GROUP BY T1.CountryCode ORDER BY count(*) DESC LIMIT 1
 SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code GROUP BY T2.Name ORDER BY count(*) DESC LIMIT 1
 SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(*) DESC LIMIT 1
 SELECT continent FROM countrylanguage GROUP BY continent ORDER BY count(*) DESC LIMIT 1
 SELECT COUNT ( countrycode ) FROM countrylanguage WHERE Languages  =  "english" INTERSECT SELECT COUNT ( countrycode ) FROM countrylanguage WHERE Languages  =  "dutch"
 SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "Netherlands" AND Language  =  "English"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
 SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T1.Language  =  "English" INTERSECT SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T1.Language  =  "French"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
 SELECT count(DISTINCT continent) FROM country WHERE countrycode  =  "China"
 SELECT COUNT ( DISTINCT continent ) FROM countrylanguage WHERE language  =  "Chinese"
 SELECT region FROM country WHERE language  =  'Engels' OR language  =  'Nederlands'
 SELECT T2.region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T1.name  =  'Netherlands' OR T1.name  =  'England'
 SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T1.Language  =  'English' OR T1.Language  =  'Dutch'
 SELECT CountryName FROM countrylanguage WHERE Language  =  "English" OR Language  =  "Nederlands"
 SELECT language FROM countrylanguage WHERE continent  =  'Asia' GROUP BY language ORDER BY percentage DESC LIMIT 1
 SELECT Language FROM countrylanguage WHERE Continent  =  "Asia" GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1
 SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T1.governmentform  =  'republic' GROUP BY T2.language HAVING count(*)  =  1
 SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
 SELECT name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE countrycode  =  'english' )
 SELECT cityid FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE language  =  "english" ) AND language  =  "english"
 SELECT name ,  population ,  lifeexpectancy FROM country WHERE continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1
 SELECT name ,  population ,  lifeexpectancy FROM country WHERE continent  =  'Asia' AND surfarea  =  ( SELECT MAX ( surfarea ) FROM country WHERE continent  =  'Asia' ) )
 SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE IsOfficial  =  'English' )
 SELECT avg(T2.LifeExpectancy) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language != "english"
 SELECT sum(Population) FROM country WHERE CountryCode NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language  =  "english" )
 SELECT Population FROM country WHERE CountryCode NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  "english")
 SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"
 SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"
 SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode  >  1929
 SELECT count(DISTINCT countrycode) FROM countrylanguage WHERE countrycode IN ( SELECT countrycode FROM country WHERE IndepYear  <  1930 )
 SELECT name FROM country WHERE surfacearea  >  (SELECT min(surfacearea) FROM country WHERE continent  =  'Europe')
 SELECT name FROM country WHERE surfacearea  >  ( SELECT min(surfacearea) FROM country WHERE continent  =  'Europe' )
 SELECT count(*) FROM country WHERE countrycode IN ( SELECT countrycode FROM countrylanguage WHERE language  =  "Dutch" INTERSECT SELECT countrycode FROM countrylanguage WHERE language  =  "English" )
 SELECT COUNT ( DISTINCT countrycode ) FROM countrylanguage WHERE Language  =  "English" INTERSECT SELECT COUNT ( DISTINCT countrycode ) FROM countrylanguage WHERE Language  =  "Dutch"
 SELECT Name FROM country WHERE CountryCode IN ( SELECT CountryCode FROM countrylanguage WHERE Language  =  "English" INTERSECT SELECT CountryCode FROM countrylanguage WHERE Language  =  "French" )
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "english" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "french"
 SELECT count(DISTINCT continent) FROM country WHERE countrycode  =  "China"
 SELECT COUNT ( DISTINCT continent  ) FROM country WHERE language  =  "Chinese"
 SELECT DISTINCT T2.Region FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T1.Language  =  "English" OR T1.Language  =  "Dutch"
 SELECT region FROM country WHERE language  =  "Dutch" OR language  =  "english"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" OR T2.Language  =  "English"
 SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
 SELECT Language FROM countrylanguage WHERE CountryCode  =  "Asia" GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1
 SELECT language FROM countrylanguage WHERE continent  =  'Asia' GROUP BY language ORDER BY count(*) DESC LIMIT 1
 SELECT Language FROM countrylanguage WHERE CountryCode IN ( SELECT CountryCode FROM country WHERE GovernmentForm  =  "Republic" GROUP BY CountryCode HAVING COUNT(*)  =  1 ) ORDER BY CountyCode ASC
 SELECT language FROM countrylanguage WHERE countrycode  =  (SELECT countrycode FROM country WHERE governmentform  =  "republic") GROUP BY language HAVING count(*)  =  1
 SELECT name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE countrycode  =  'english' ) AND countrycode  =  'english'
 SELECT cityID FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE countrycode  =  'english' ) AND countrycode  =  'english'
 SELECT name ,  Population ,  LifeExpectancy FROM country WHERE continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1
 SELECT name ,  population ,  lifeexpectancy FROM country WHERE continent  =  'Asia' ORDER BY SurfaceArea DESC LIMIT 1
 SELECT avg(LifeExpectancy) FROM country WHERE CODE NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial  =  'Yes' AND Language  =  'english')
 SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  "english")
 SELECT sum(Population) FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language  =  "english" )
 SELECT Population FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language  =  "english")
 SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"
 SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"
 SELECT count(DISTINCT language) FROM countrylanguage WHERE countrycode  >  1930
 SELECT count(DISTINCT countrycode) FROM countrylanguage WHERE countrycode FROM country WHERE indepyear  <  1930
 SELECT name FROM country WHERE surfacearea  >  ( SELECT max ( surfacearea ) FROM country WHERE continent  =  'Europe' )
 SELECT name FROM country WHERE SurfaceArea  >  (SELECT max(SurfaceArea) FROM country WHERE continent  =  'Europe')
 SELECT Name FROM Country ORDER BY Population ASC LIMIT 3
 SELECT Name FROM country ORDER BY Population ASC LIMIT 3
 SELECT count(*) FROM country WHERE continent  =  'Asia'
 SELECT count(*) FROM country WHERE continent  =  'Asia'
 SELECT name FROM country WHERE population  >  80000 AND continent  =  'Europe'
 SELECT Name FROM country WHERE Population  =  80000 AND Continent  =  "Europe"
 SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE SurfaceArea  >  3000 AND Continent  =  'North America'
 SELECT population ,  avg(surfacearea) FROM country WHERE surfacearea  >  3000 AND continent  =  'North America'
 SELECT name FROM city WHERE population BETWEEN 160000 AND 900000
 SELECT name FROM city WHERE population BETWEEN 160000 AND 900000
 SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Language ,  CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY Percentage DESC LIMIT 1
 SELECT CountryCode ,  Language FROM countrylanguage GROUP BY CountryCode ,  Language ORDER BY Percentage DESC LIMIT 1
 SELECT count(DISTINCT countrycode) FROM countrylanguage WHERE language  =  "Spanish" AND percentage  =  (SELECT max(percentage) FROM countrylanguage WHERE language  =  "Spanish")
 SELECT COUNT ( DISTINCT countrycode ) FROM countrylanguage WHERE language  =  "Spanish"
 SELECT countrycode FROM countrylanguage WHERE language  =  "Spanish" ORDER BY percentage DESC LIMIT 1
 SELECT countrycode FROM countrylanguage WHERE language  =  "Spanish" GROUP BY countrycode HAVING Percentage  >  50
 SELECT count(*) FROM conductor
 SELECT count(*) FROM conductor
 SELECT Name FROM conductor ORDER BY Age ASC
 SELECT Name FROM conductor ORDER BY Age ASC
 SELECT Name FROM conductor WHERE Nationality != "USA"
 SELECT Name FROM conductor WHERE Nationality != "USA"
 SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
 SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
 SELECT avg(Attendance) FROM show
 SELECT avg(Attendance) FROM show
 SELECT max(Share) ,  min(Share) FROM performance WHERE TYPE != "Live final"
 SELECT max(Share) ,  min(Share) FROM performance WHERE TYPE != "Live final"
 SELECT count(DISTINCT Nationality) FROM conductor
 SELECT COUNT (DISTINCT Nationality) FROM conductor
 SELECT Name FROM conductor ORDER BY Year_of_Work DESC
 SELECT name FROM conductor ORDER BY year_of_work DESC
 SELECT name FROM conductor ORDER BY year_of_work DESC LIMIT 1
 SELECT name FROM conductor ORDER BY YEAR_of_Work DESC LIMIT 1
 SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
 SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
 SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
 SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*)  >  1
 SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Name ORDER BY count(*) DESC LIMIT 1
 SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
 SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Year_of_Founded  >  2008
 SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE T2.Year_of_Founded  >  2008
 SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
 SELECT Record_Company ,  count(*) FROM orchestra GROUP BY Record_Company
 SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY count(*) ASC
 SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC
 SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Orchestra FROM ORCHESTRA EXCEPT SELECT T1.Orchestra FROM ORCHESTRA AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID
 SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
 SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
 SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
 SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
 SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
 SELECT YEAR_OF_Founded FROM orchestra WHERE COUNT(*)  >  1
 SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
 SELECT count(*) FROM highschooler
 SELECT count(*) FROM Highschooler
 SELECT name ,  grade FROM Highschooler
 SELECT name ,  grade FROM highschooler
 SELECT DISTINCT grade FROM highschooler
 SELECT DISTINCT grade FROM highschooler
 SELECT grade FROM highschooler WHERE name  =  "Kyle"
 SELECT DISTINCT grade FROM highschooler WHERE name  =  "Kyle"
 SELECT name FROM highschooler WHERE grade  =  10
 SELECT name FROM highschooler WHERE grade  =  10
 SELECT ID FROM Highschooler WHERE name  =  "Kyle"
 SELECTstudent_id FROM highschooler WHERE name  =  "Kyle"
 SELECT count(*) FROM highschooler WHERE grade  =  9 OR grade  =  10
 SELECT count(*) FROM highschooler WHERE grade  =  9 OR grade  =  10
 SELECT count(*) ,  grade FROM Hightschooler GROUP BY grade
 SELECT count(*) ,  grade FROM highschooler GROUP BY grade
 SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
 SELECT grade FROM highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
 SELECT grade FROM highschooler GROUP BY grade HAVING count(*)  >=  4
 SELECT DISTINCT grade FROM highschooler GROUP BY grade HAVING count(*)  >=  4
 SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
 SELECT T1.id ,  count(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id  =  T2.student_id GROUP BY T1.id
 SELECT T1.name ,  count(*) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id
 SELECT count(*) ,  T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id GROUP BY T1.name
 SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
 SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  >=  3
 SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.friend_id  =  T2.id GROUP BY T1.friend_id HAVING count(*)  >=  3
 SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.friend_id WHERE T2.student_id  =  'Kyle'
 SELECT T2.friend_name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id WHERE T1.name  =  "Kyle"
 SELECT count(T2.friend_id) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id WHERE T1.name  =  "Kyle"
 SELECT count(*) FROM friend WHERE student_id  =  'Kyle'
 SELECT id FROM student EXCEPT SELECT friend_id FROM friend
 SELECT id FROM highschooler EXCEPT SELECT student_id FROM friend
 SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
 SELECT name FROM student WHERE student_id NOT IN (SELECT student_id FROM friend)
 SELECT T1.id FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id INTERSECT SELECT T1.id FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id
 SELECT T1.id FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.friend_id INTERSECT SELECT T1.id FROM likes AS T1 JOIN student_id AS T2 ON T1.student_id  =  T2.student_id
 SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.id JOIN likes AS T3 ON T3.student_id  =  T2.id WHERE T1.friend_id IN (SELECT T1.friend_id FROM friend GROUP BY T1.friend_id HAVING count(*)  >  2) INTERSECT SELECT T2.name FROM highschooler AS T2 JOIN likes AS T3 ON T2.id  =  T3.student_id WHERE T2.grade  =  'Freshman'
 SELECT T2.name FROM friend AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.id JOIN likes AS T3 ON T3.student_id  =  T1.friend_id WHERE T2.grade  =  "High School"
 SELECT count(*) ,  student_id FROM Likes GROUP BY student_id
 SELECT count(*) ,  student_id FROM Likes GROUP BY student_id
 SELECT T2.name ,  count(*) FROM LIKES AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
 SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
 SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
 SELECT T2.name FROM likes AS T1 JOIN highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
 SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
 SELECT T1.name FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id GROUP BY T2.student_id HAVING count(*)  >=  2
 SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id WHERE T1.grade  >  5 GROUP BY T2.student_id HAVING count(*)  >=  2
 SELECT T1.name FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id WHERE T1.grade  >  5 GROUP BY T2.student_id HAVING count(*)  >=  2
 SELECT count(DISTINCT liked_id) FROM LIKES AS T1 JOIN student_id  =  T1.student_id WHERE T1.student_id  =  'Kyle'
 SELECT count(DISTINCT T2.liked_id) FROM highschooler AS T1 JOIN likes AS T2 ON T1.id  =  T2.student_id WHERE T1.name  =  "Kyle"
 SELECT avg(T1.grade) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id
 SELECT avg(T1.grade) FROM highschooler AS T1 JOIN friend AS T2 ON T1.id  =  T2.student_id
 SELECT min(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
 SELECT min(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)
 SELECT state FROM owners INTERSECT SELECT state FROM professionals
 SELECT state FROM OWNERS INTERSECT SELECT state FROM PROFESSIONALS
 SELECT avg(T1.age) FROM DOGS AS T1 JOIN TREATMENTS AS T2 ON T1.dog_id  =  T2.dog_id
 SELECT avg(T1.age) FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id
 SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN OWNERS AS T3 ON T3.owner_id  =  T2.dog_id WHERE T3.state  =  "Indiana" OR count(*)  >  2
 SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  "Indiana" OR COUNT(*)  >=  2
 SELECT name FROM DOGS WHERE dog_id NOT IN ( SELECT dog_id FROM treatments WHERE cost_of_treatment  >  1000 )
 SELECT T1.name FROM dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN owners AS T3 ON T1.owner_id  =  T3.owner_id WHERE T3.state  =  'NY' AND T2.cost_of_treatment  <  1000
 SELECT first_name FROM professionals OR owners EXCEPT SELECT first_name FROM dogs
 SELECT first_name FROM professionals EXCEPT SELECT first_name FROM dogs
 SELECT professional_id FROM professionals EXCEPT SELECT professional_id FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id
 SELECT professional_id ,  role_code ,  email_address FROM professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.treatment_type_code  =  'Dogs'
 SELECT T1.owner_id ,  T1.first_name ,  T1.last_name FROM OWNERS AS T1 JOIN DOGS AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.owner_id ,  T1.first_name ,  T1.last_name FROM OWNERS AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
 SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
 SELECT T2.professional_id ,  T2.role_code ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T2.professional_id HAVING count(*)  >= 2
 SELECT T2.breed_name FROM DOGS AS T1 JOIN BREEDS AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_code ORDER BY COUNT(*) DESC LIMIT 1
 SELECT T2.breed_name FROM dogs AS T1 JOIN breeds AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_code ORDER BY count(*) DESC LIMIT 1
 SELECT T2.owner_id ,  T1.last_name FROM Treatments AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T2.owner_id ORDER BY count(*) DESC LIMIT 1
 SELECT T2.owner_id ,  T2.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
 SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY sum(T2.cost_of_treatment) LIMIT 1
 SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T2.treatment_type_code ORDER BY sum(T2.cost_of_treatment) LIMIT 1
 SELECT T1.owner_id ,  T1.zip_code FROM OWNERS AS T1 JOIN DOGS AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1
 SELECT T2.owner_id ,  T2.zip_code FROM DOGS AS T1 JOIN OWNERS AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T2.owner_id ORDER BY sum(T1.cost_of_treatment) DESC LIMIT 1
 SELECT T2.professional_id ,  T2.cell_number FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T2.professional_id HAVING COUNT(*)  >=  2
 SELECT T2.professional_id ,  T2.cell_number FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T2.professional_id HAVING COUNT(*)  >=  2
 SELECT T2.first_name ,  T2.last_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)
 SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T2.cost_of_treatment  <  (SELECT avg(cost_of_treatment) FROM Treatments)
 SELECT date_of_treatment ,  T1.first_name FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id  =  T2.professional_id
 SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
 SELECT cost_of_treatment ,  treatment_type_description FROM Treatments
 SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
 SELECT T2.first_name ,  T2.last_name ,  T2.size_code FROM OWNERS AS T1 JOIN DOGS AS T2 ON T1.owner_id  =  T2.owner_id
 SELECT T1.first_name ,  T1.last_name ,  T2.size_description FROM OWNERS AS T1 JOIN SIZES AS T2 ON T1.owner_id  =  T2.size_code
 SELECT T2.name ,  T1.first_name FROM OWNERS AS T1 JOIN DOGS AS T2 ON T1.owner_id  =  T2.owner_id
 SELECT t1.first_name ,  t2.name FROM OWNERS AS t1 JOIN DOGS AS t2 ON t1.owner_id  =  t2.owner_id
 SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id JOIN Breeds AS T3 ON T1.breed_code  =  T3.breed_code WHERE T3.breed_name  =  (SELECT breed_name FROM Breeds GROUP BY breed_name ORDER BY count(*) LIMIT 1)
 SELECT name ,  date_of_treatment FROM Dogs WHERE breed_code  =  (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) LIMIT 1)
 SELECT T2.first_name ,  T1.name FROM OWNERS AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
 SELECT T1.first_name ,  T2.name FROM OWNERS AS T1 JOIN DOGS AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
 SELECT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
 SELECT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
 SELECT t1.last_name FROM owners AS t1 JOIN dogs AS t2 ON t1.owner_id  =  t2.owner_id ORDER BY t2.age LIMIT 1
 SELECT T2.last_name FROM Dogs AS T1 JOIN OWNERS AS T2 ON T1.owner_id  =  T2.owner_id ORDER BY T1.age LIMIT 1
 SELECT email_address FROM PROFESSIONALS WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
 SELECT email_address FROM professionals WHERE state  =  "Hawaii" OR state  =  "Wisconsin"
 SELECT date_arrived ,  date_departed FROM DOGS
 SELECT date_arrived ,  date_departed FROM DOGS
 SELECT count(DISTINCT dog_id) FROM Treatments
 SELECT count(*) FROM  dogs AS T1 JOIN treatments AS T2 ON T1.dog_id  =  T2.dog_id
 SELECT count(DISTINCT professional_id) FROM treatments
 SELECT count(DISTINCT professional_id) FROM Treatments WHERE dog_id  >  0
 SELECT T1.role_code ,  T1.street ,  T1.city ,  T1.state FROM Professionals AS T1 JOIN OWNERS AS T2 ON T1.professional_id  =  T2.owner_id WHERE T2.city LIKE '%West%'
 SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
 SELECT first_name ,  last_name ,  email_address FROM OWNERS WHERE state LIKE '%North%'
 SELECT first_name ,  last_name ,  email_address FROM OWNERS WHERE state LIKE "%North%"
 SELECT count(*) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)
 SELECT count(*) FROM Dogs WHERE age  <  (SELECT avg(age) FROM Dogs)
 SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
 SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
 SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
 SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
 SELECT count(*) FROM OWNERS WHERE owner_id NOT IN (SELECT owner_id FROM dogs)
 SELECT count(*) FROM OWNERS WHERE owner_id NOT IN (SELECT owner_id FROM DOGS)
 SELECT count(*) FROM professionals WHERE professional_id NOT IN ( SELECT professional_id FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id )
 SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments AS T1 JOIN dogs AS T2 ON T1.dog_id  =  T2.dog_id)
 SELECT name ,  age ,  weight FROM DOGS WHERE abandoned_yn  =  1
 SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
 SELECT avg(age) FROM Dogs
 SELECT avg(age) FROM DOGS
 SELECT max(age) FROM DOGS
 SELECT age FROM Dogs ORDER BY age DESC LIMIT 1
 SELECT charge_type ,  charge_amount FROM Changes
 SELECT charge_type ,  charge_amount FROM CHARGES
 SELECT charge_type ,  sum(charge_amount) FROM Charges GROUP BY charge_type ORDER BY sum(charge_amount) DESC LIMIT 1
 SELECT charge_type ,  max(charge_amount) FROM Charges GROUP BY charge_type
 SELECT email_address ,  cell_number ,  home_phone FROM Professionals
 SELECT email_address ,  cell_number ,  home_phone FROM Professionals
 SELECT DISTINCT breed_code ,  size_code FROM DOGS
 SELECT distinct(breed_code) ,  distinct(size_code) FROM DOGS
 SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
 SELECT T1.first_name ,  T2.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
 SELECT count(*) FROM singer
 SELECT count(*) FROM singer
 SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
 SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
 SELECT Birth_Year ,  Citizenship FROM singer
 SELECT Birth_Year ,  Citizenship FROM singer
 SELECT Name FROM singer WHERE Citizenship != "France"
 SELECT Name FROM singer WHERE Citizenship != "French"
 SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
 SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
 SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
 SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
 SELECT citizenship ,  count(*) FROM singer GROUP BY citizenship
 SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
 SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
 SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
 SELECT max(net_worth_millions) ,  Citizenship FROM singer GROUP BY Citizenship
 SELECT T1.Title ,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID
 SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
 SELECT DISTINCT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Sales  >  300000
 SELECT DISTINCT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Sales  >  300000
 SELECT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(*)  >  1
 SELECT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(*)  >  1
 SELECT T2.Name ,  SUM(T1.Sales) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Name
 SELECT T2.Name ,  sum(T1.Sales) FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Name
 SELECT Name FROM Singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
 SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
 SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
 SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
 SELECT count(*) FROM Other_Available_Features
 SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
 SELECT T2.property_type_description FROM properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code
 SELECT property_name FROM properties WHERE property_type_code  =  'House' OR room_count  >  1
